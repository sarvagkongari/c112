import files 
data_to_load=files.upload()

import pandas as pd
import statistics 
import plotly.express as px

df=pd.read_csv("savings_data_final.csv")
fig=px.scatter(df,y="quant_saved",color="rem_any")
fig.show()

import csv
with open("savings_data_final.csv",newline="")as f:
  reader=csv.reader(f)
  savings_data=list(reader)
savings_data.pop(0)

total_entries=len(savings_data)
total_ppl_given_reminder=0

for data in savings_data:
  if int(data[3])==1:
    total_ppl_given_reminder+=1

import plotly.graph_objects as go
fig=go.Figure(go.Bar(x=["Reminded","Not Reminded"],y=[total_ppl_given_reminder,(total_entries-total_ppl_given_reminder)]))
fig.show()

all_savings=[]
for data in savings_data:
  all_savings.append(float(data[0]))

print(f"mean of savings -{statistics.mean(all_savings)}")
print(f"median of savings -{statistics.median(all_savings)}")
print(f"mode of savings -{statistics.mode(all_savings)}")

reminded_savings=[]
not_reminded_savings=[]
for data in savings_data:
  if int(data[3])==1:
    reminded_savings.append(float(data[0]))
  else:
    not_reminded_savings.append(float(data[0]))
print("results for ppl who were reminded to save")
print(f"mean of savings-{statistics.mean(reminded_savings)}")
print(f"median of savings-{statistics.median(reminded_savings)}")
print(f"mode of savings-{statistics.mode(reminded_savings)}")
print("\n\n")
print("results for ppl who were not reminded to save")
print(f"mean of savings-{statistics.mean(not_reminded_savings)}")
print(f"median of savings-{statistics.median(not_reminded_savings)}")
print(f"mode of savings-{statistics.mode(not_reminded_savings)}")

print(f"std of all the data {statistics.stdev(all_savings)}")
print(f"std of reminded {statistics.stdev(reminded_savings)}")
print(f"std of not reminded {statistics.stdev(not_reminded_savings)}")

import numpy as np
age=[]
savings=[]
for data in savings_data:
  if float(data[5])!=0:
    age.append(float(data[5]))
    savings.append(float(data[0]))
correlation=np.corrcoef(age,savings)
print(f"correlation bt age and savings -{correlation[0,1]}]")
import plotly.figure_factory as ff
fig=ff.create_distplot([df["quant_saved"].tolist()],["Savings"],show_hist=False)
fig.show()
import plotly.figure_factory as ff
fig=ff.create_distplot([df["quant_saved"].tolist()],["Savings"],show_hist=False)
fig.show()